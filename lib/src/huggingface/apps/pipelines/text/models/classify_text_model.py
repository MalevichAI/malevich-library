# generated by datamodel-codegen:
#   filename:  classify_text_model.json

from __future__ import annotations

from typing import Optional

from malevich.square import scheme
from pydantic import BaseModel, Field


@scheme()
class ClassifyText(BaseModel):
    model: Optional[str] = Field(
        'distilbert-base-uncased-finetuned-sst-2-english',
        description='Name of the model to use in the pipeline',
    )
    top_k: Optional[int] = Field(1, description='Number of top labels to return')
    functions_to_apply: Optional[str] = Field(
        'default',
        description='The function to apply to the model outputs in order to retrieve the scores',
    )
